{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cf-character/character.component.css","webpack:///./src/app/cf-character/character.component.html","webpack:///./src/app/cf-character/character.component.ts","webpack:///./src/app/cf-character/character.service.ts","webpack:///./src/app/cf-home/home.component.css","webpack:///./src/app/cf-home/home.component.html","webpack:///./src/app/cf-home/home.component.ts","webpack:///./src/app/cf-login/login.component.css","webpack:///./src/app/cf-login/login.component.html","webpack:///./src/app/cf-login/login.component.ts","webpack:///./src/app/cf-nav/nav.component.css","webpack:///./src/app/cf-nav/nav.component.html","webpack:///./src/app/cf-nav/nav.component.ts","webpack:///./src/app/cf-user/user.component.css","webpack:///./src/app/cf-user/user.component.html","webpack:///./src/app/cf-user/user.component.ts","webpack:///./src/app/cf-user/user.service.ts","webpack:///./src/app/shared/const.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"div.bodyParent {\\r\\n    background-color: lightgreen;\\r\\n    height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bodyParent\\\">\\r\\n  <cf-nav>\\r\\n\\r\\n  </cf-nav>\\r\\n  <router-outlet>\\r\\n    \\r\\n  </router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { FormsModule } from '@angular/forms'\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserComponent } from './cf-user/user.component';\r\nimport { CharacterComponent } from './cf-character/character.component';\r\nimport { NavigationComponent } from './cf-nav/nav.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { HomeComponent } from './cf-home/home.component';\r\nimport { LoginComponent } from './cf-login/login.component';\r\nimport { UserService } from './cf-user/user.service';\r\nimport { CharacterService } from './cf-character/character.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'character', component: CharacterComponent },\r\n  { path: 'user', component: UserComponent },\r\n  { path: 'login', component: LoginComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    CharacterComponent,\r\n    NavigationComponent,\r\n    HomeComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    CharacterService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"button.buttonOne {\\r\\n    padding: 5px;\\r\\n    margin: 5px;\\r\\n    background-color: blue;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ndiv.container {\\r\\n    padding: 5px;\\r\\n    height: 100%;\\r\\n    background-color: lightblue;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  Character Component\\r\\n\\r\\n  <div>\\r\\n    {{ summary }}\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <div *ngFor=\\\"let c of characters\\\">\\r\\n      <button (click)=\\\"loadCharacter(c.id)\\\">\\r\\n      {{ c.characterDescription.name }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    {{ character }}\\r\\n  </div>\\r\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CharacterService } from './character.service';\r\n\r\n@Component({\r\n  selector: 'cf-character',\r\n  templateUrl: './character.component.html',\r\n  styleUrls: ['./character.component.css']\r\n})\r\nexport class CharacterComponent implements OnInit {\r\n  title = 'PCM - Character';\r\n\r\n  names : Array<string> = [];\r\n  ids : Array<string> = [];\r\n\r\n  character : any;\r\n  characters : any;\r\n\r\n  summary : any;\r\n\r\n  constructor(private _characterService: CharacterService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._characterService.characters$.subscribe(x => {\r\n      if (x !== null) {\r\n        if (x.length !== 0) {\r\n          this.characters = x;\r\n          this.summary = \"Fetched all characters\";\r\n        } else {\r\n          this.summary = \"No characters found, try logging in\";\r\n        }\r\n      } else {\r\n        this.character = null;\r\n        this.characters = null;\r\n      }\r\n    })\r\n  }\r\n\r\n  loadCharacter(id : string) {\r\n    this._characterService.getCharacter(id);\r\n    this._characterService.character$.subscribe(x => {\r\n        if (x !== null) {\r\n          this.character = x;\r\n        }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { BACKEND_URL } from \"../shared/const\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class CharacterService {\r\n\r\n    character$ : BehaviorSubject<any> = new BehaviorSubject(null);\r\n    character : any;\r\n    \r\n    characters$ : BehaviorSubject<any> = new BehaviorSubject(null);\r\n    characters : any;\r\n\r\n    error : any;\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    setCharacter(character : any) {\r\n        this.character$.next(character);\r\n        this.character = character;\r\n    }\r\n\r\n    setCharacters(characters : any) {\r\n        this.characters$.next(characters);\r\n        this.characters = characters;\r\n    }\r\n\r\n    getCharacter(id : string): any {\r\n        let url = BACKEND_URL + 'api/character/' + id;\r\n        this._http.get(url).subscribe(x => {\r\n            this.setCharacter(x[\"characters\"][0]);\r\n        });\r\n    }\r\n    \r\n    getAllCharactersForUser(userId : string) {\r\n        let url = BACKEND_URL + 'api/character/user/' + userId;\r\n        this._http.get(url).subscribe(x => {\r\n            if (x !== null) {\r\n                this.setCharacters(x[\"characters\"]);\r\n            }\r\n        });\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1 class=\\\"heading\\\">\\r\\n    Welcome to Crystal Fantasy - PATHFINDER Character Manager!\\r\\n  </h1>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cf-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  title = 'PCM';\r\n\r\n}\r\n","module.exports = \"button.buttonOne {\\r\\n    padding: 5px;\\r\\n    margin: 5px;\\r\\n    background-color: rgb(212, 250, 203);\\r\\n    color: black;\\r\\n    border-color: black;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\ndiv.container {\\r\\n    padding: 5px;\\r\\n    height: 100%;\\r\\n    background-color: royalblue;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div *ngIf=\\\"loggedIn\\\">\\r\\n        <div>\\r\\n            Welcome, {{ userName }}! \\r\\n        </div>\\r\\n        <button (click)=\\\"logOut()\\\">\\r\\n            Log Out\\r\\n        </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!loggedIn\\\">\\r\\n        <div>\\r\\n            <label>Email Address</label>\\r\\n            <input [(ngModel)] = \\\"email\\\">\\r\\n        <br>\\r\\n            <label>Password</label>\\r\\n            <input [(ngModel)] = \\\"password\\\" type=password>\\r\\n        </div>\\r\\n        <button (click)=\\\"logIn()\\\">\\r\\n            Log In\\r\\n        </button>\\r\\n        <button (click)=\\\"signUp()\\\">\\r\\n                Sign Up\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BACKEND_URL } from '../shared/const';\r\nimport { UserService } from '../cf-user/user.service';\r\nimport { takeUntil } from \"rxjs/operators\"\r\nimport { CharacterService } from '../cf-character/character.service';\r\n\r\n\r\n@Component({\r\n  selector: 'cf-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  email : string = '';\r\n  password : string = '';\r\n\r\n  userName : string;\r\n\r\n  loggedIn = false;\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService, private _characterService: CharacterService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._userService.user$.subscribe(x => {\r\n      if (x !== null) {\r\n        this.loggedIn = true;\r\n        this.userName = x.name || x.email;\r\n        console.log(x);\r\n        this._characterService.getAllCharactersForUser(x.id);\r\n      } else {\r\n        this.loggedIn = false;\r\n        this.userName = undefined;\r\n        this._characterService.setCharacter(null);\r\n        this._characterService.setCharacters(null);\r\n      }\r\n    })\r\n  }\r\n\r\n  logIn() {\r\n    let credentials = {\r\n      'email': this.email,\r\n      'password': this.password\r\n    }\r\n    this._userService.logIn(credentials);\r\n  }\r\n\r\n  logOut() {\r\n    this._userService.logOut();\r\n    this.email = '';\r\n    this.password = '';\r\n    //clear input fields\r\n  }\r\n\r\n  signUp() {\r\n    let req = {\r\n      'email': this.email,\r\n      'password': this.password\r\n    }\r\n    this._userService.register(req);\r\n    this.email = '';\r\n    this.password = '';\r\n  }\r\n}\r\n","module.exports = \"button.buttonOne {\\r\\n    padding: 5px;\\r\\n    margin: 5px;\\r\\n    background-color: rgb(212, 250, 203);\\r\\n    color: black;\\r\\n    border-color: black;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\ndiv.container {\\r\\n    padding: 10px;\\r\\n    height: 5%;\\r\\n    background-color: darkolivegreen;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <button class=\\\"buttonOne\\\" routerLink=\\\"/\\\">\\r\\n        Home\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"buttonOne\\\" routerLink=\\\"/character\\\" >\\r\\n        Character\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"buttonOne\\\" routerLink=\\\"/user\\\">\\r\\n        User\\r\\n    </button>\\r\\n\\r\\n    <cf-login>\\r\\n        \\r\\n    </cf-login>\\r\\n</div>\"","import { Component, OnInit, AfterContentInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BACKEND_URL } from '../shared/const';\r\nimport { UserService } from '../cf-user/user.service';\r\n\r\n@Component({\r\n  selector: 'cf-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavigationComponent {\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) {\r\n  }\r\n}\r\n","module.exports = \"button.buttonOne {\\r\\n    padding: 5px;\\r\\n    margin: 5px;\\r\\n    background-color: blue;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ndiv.container {\\r\\n    padding: 5px;\\r\\n    height: 100%;\\r\\n    background-color: lightblue;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  User Component\\r\\n  <div>\\r\\n    {{ user }}\\r\\n  </div>\\r\\n  <div>\\r\\n    {{ summary }}\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\n\r\n@Component({\r\n  selector: 'cf-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent {\r\n  title = 'Crystal Fantasy';\r\n  user = null;\r\n  summary = null;\r\n  \r\n  constructor(private _userService: UserService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._userService.user$.subscribe(x => {\r\n      if (x !== null) {\r\n        this.user = x;\r\n        this.summary = this.user.name + \" is currently logged in.\"\r\n      } else {\r\n        this.summary = \"Not logged in...\";\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { BACKEND_URL } from \"../shared/const\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    user$ : BehaviorSubject<any> = new BehaviorSubject(null);\r\n    user : any;\r\n    error : any;\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    setUser(user : any) {\r\n        this.user$.next(user);\r\n        this.user = user;\r\n    }\r\n\r\n    getUser(id : string): any {\r\n        let url = BACKEND_URL + 'api/user/' + id;\r\n        this._http.get(url).subscribe(x => {\r\n            this.setUser(x);\r\n        });\r\n    }\r\n\r\n    logIn(credentials: any): void {\r\n        let url = BACKEND_URL + 'api/auth/login';\r\n        this._http.post(url, credentials).subscribe(x => {\r\n            let summary = <string> x[\"summary\"];\r\n            if (summary === \"Password did not match!\" || summary === \"User not found by that Email\" ) {\r\n                this.error = \"username or password not correct\";\r\n            } else {\r\n                this.getUser(summary);\r\n            }\r\n        }, y => {\r\n            console.log(y);\r\n        })\r\n    }\r\n\r\n    logOut(): void {\r\n        this.setUser(null);\r\n    }\r\n\r\n    register(req) {\r\n        let url = BACKEND_URL + 'api/register/'\r\n        this._http.post(url, req).subscribe(x => {\r\n            \r\n        },\r\n        y => {\r\n            this.error = y;\r\n        },\r\n        () => {\r\n            this.error = \"Success!\";\r\n        });\r\n    }\r\n}","export const BACKEND_URL = 'http://66.242.90.163:8017/';","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}